{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CSE_STUDENT\\\\Desktop\\\\New folder (6)\\\\dashboard\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Line } from 'react-chartjs-2';\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\nimport fetchSheetData from './api/googleSheets';\nimport ExcelUpload from './ExcelUpload';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [data, setData] = useState([]);\n  const [chartData, setChartData] = useState(null);\n  const processData = data => {\n    const labels = data.map(item => item.Date); // Assuming there's a Date column\n    const values = data.map(item => item.Value); // Assuming there's a Value column\n\n    return {\n      labels: labels,\n      datasets: [{\n        label: 'Data Values',\n        data: values,\n        fill: false,\n        borderColor: 'rgba(75,192,192,1)',\n        tension: 0.1\n      }]\n    };\n  };\n  const handleDataChange = newData => {\n    setData(newData);\n    const chartInfo = processData(newData);\n    setChartData(chartInfo); // Update chart data when new data is loaded\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an Excel file to see the graph.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Additional data, charts, or widgets can be placed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"upload-container\",\n      children: /*#__PURE__*/_jsxDEV(ExcelUpload, {\n        setData: handleDataChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"s/TQpzUed3+MQsiBn6ArR2HjXSo=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Line","Chart","ChartJS","CategoryScale","LinearScale","LineElement","PointElement","Title","Tooltip","Legend","fetchSheetData","ExcelUpload","jsxDEV","_jsxDEV","register","Dashboard","_s","data","setData","chartData","setChartData","processData","labels","map","item","Date","values","Value","datasets","label","fill","borderColor","tension","handleDataChange","newData","chartInfo","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CSE_STUDENT/Desktop/New folder (6)/dashboard/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Line } from 'react-chartjs-2';\r\nimport { Chart as ChartJS, CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport fetchSheetData from './api/googleSheets';\r\n\r\nimport ExcelUpload from './ExcelUpload';\r\n\r\n// Register Chart.js components\r\nChartJS.register(CategoryScale, LinearScale, LineElement, PointElement, Title, Tooltip, Legend);\r\n\r\nfunction Dashboard() {\r\n  const [data, setData] = useState([]);\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const processData = (data) => {\r\n    const labels = data.map((item) => item.Date); // Assuming there's a Date column\r\n    const values = data.map((item) => item.Value); // Assuming there's a Value column\r\n\r\n    return {\r\n      labels: labels,\r\n      datasets: [\r\n        {\r\n          label: 'Data Values',\r\n          data: values,\r\n          fill: false,\r\n          borderColor: 'rgba(75,192,192,1)',\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const handleDataChange = (newData) => {\r\n    setData(newData);\r\n    const chartInfo = processData(newData);\r\n    setChartData(chartInfo); // Update chart data when new data is loaded\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"graph-container\">\r\n        {/* Left side - Graph */}\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>Upload an Excel file to see the graph.</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        {/* Right side - Other content */}\r\n        <h2>Other Content</h2>\r\n        <p>Additional data, charts, or widgets can be placed here.</p>\r\n      </div>\r\n\r\n      {/* Excel file upload */}\r\n      <div className=\"upload-container\">\r\n        <ExcelUpload setData={handleDataChange} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}