{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CSE_STUDENT\\\\Desktop\\\\New folder (6)\\\\dashboard\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { Line } from 'react-chartjs-2';\nimport fetchSheetData from './api/googleSheets';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nfunction Dashboard() {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  const fetchData = async () => {\n    const sheetData = await fetchSheetData();\n    if (sheetData.length) {\n      const labels = sheetData.map(item => item[0]); // Date (First column)\n      const distanceData = sheetData.map(item => parseFloat(item[1])); // Distance (Second column)\n      const flowrateData = sheetData.map(item => parseFloat(item[2])); // Flowrate (Third column)\n\n      const newChartData = {\n        labels: labels,\n        datasets: [{\n          label: 'Distance',\n          data: distanceData,\n          fill: false,\n          borderColor: 'rgba(75,192,192,1)',\n          tension: 0.1\n        }, {\n          label: 'Flowrate',\n          data: flowrateData,\n          fill: false,\n          borderColor: 'rgba(255,99,132,1)',\n          tension: 0.1\n        }]\n      };\n      setChartData(newChartData); // Update the chart data\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Fetch on initial render\n\n    const intervalId = setInterval(fetchData, 5000); // Fetch data every 5 seconds\n\n    return () => clearInterval(intervalId); // Clear interval when component unmounts\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"graph-container\",\n      children: chartData ? /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Other Content\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Additional data, charts, or widgets can be placed here.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Chart","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","Line","fetchSheetData","jsxDEV","_jsxDEV","register","Dashboard","_s","chartData","setChartData","fetchData","sheetData","length","labels","map","item","distanceData","parseFloat","flowrateData","newChartData","datasets","label","data","fill","borderColor","tension","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CSE_STUDENT/Desktop/New folder (6)/dashboard/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Chart, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\r\nimport { Line } from 'react-chartjs-2';\r\nimport fetchSheetData from './api/googleSheets';\r\n\r\nChart.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\r\n\r\nfunction Dashboard() {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  const fetchData = async () => {\r\n    const sheetData = await fetchSheetData();\r\n\r\n    if (sheetData.length) {\r\n      const labels = sheetData.map((item) => item[0]); // Date (First column)\r\n      const distanceData = sheetData.map((item) => parseFloat(item[1])); // Distance (Second column)\r\n      const flowrateData = sheetData.map((item) => parseFloat(item[2])); // Flowrate (Third column)\r\n\r\n      const newChartData = {\r\n        labels: labels,\r\n        datasets: [\r\n          {\r\n            label: 'Distance',\r\n            data: distanceData,\r\n            fill: false,\r\n            borderColor: 'rgba(75,192,192,1)',\r\n            tension: 0.1,\r\n          },\r\n          {\r\n            label: 'Flowrate',\r\n            data: flowrateData,\r\n            fill: false,\r\n            borderColor: 'rgba(255,99,132,1)',\r\n            tension: 0.1,\r\n          },\r\n        ],\r\n      };\r\n\r\n      setChartData(newChartData); // Update the chart data\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData(); // Fetch on initial render\r\n\r\n    const intervalId = setInterval(fetchData, 5000); // Fetch data every 5 seconds\r\n\r\n    return () => clearInterval(intervalId); // Clear interval when component unmounts\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"graph-container\">\r\n        {/* Left side - Graph */}\r\n        {chartData ? (\r\n          <Line data={chartData} />\r\n        ) : (\r\n          <p>Loading data...</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"content-container\">\r\n        {/* Right side - Other content */}\r\n        <h2>Other Content</h2>\r\n        <p>Additional data, charts, or widgets can be placed here.</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}